# Comprehensive CodeStruct Example demonstrating all features
# This file is auto-generated by the AI assistant

dir: my_comprehensive_project ::: aabcdef0123456789
  doc: "Root directory for the comprehensive example project"

  # File with modules, classes, functions, imports, etc.
  file: src/main_service.cst ::: afedcba9876543210
    module: main_service ::: a234567890abcdef12
      doc: "Main service module with core logic"
      # Example of external imports, grouped
      import: logging & os & sys ::: aa1b2c3d4e5f67890
        type: external
        source: stdlib
      import: requests ::: ab2c3d4e5f678901a
        type: external
        source: pypi

      # Example Class with attributes and methods
      class: DataProcessor [type: SERVICE] ::: ac3d4e5f678901a2b
        doc: "Processes incoming data"
        attr: config [type: "Dict[str, Any]", default: "{ \"timeout\": 10 }"] ::: ad4e5f678901a2b3c
          doc: "Configuration settings"
        var: internal_state [type: ANY] ::: ae5f678901a2b3c4d
          doc: "Internal processing state"

        # Example Async function with complex types and documentation
        func: fetchData [type: Async] ::: af678901a2b3c4d5e
          doc: "Asynchronously fetches data from an external source"
          param: endpoint [type: STRING] ::: a01a2b3c4d5e67890
            doc: "API endpoint URL"
          param: payload [type: "Optional[Dict[str, List[int]]]"] ::: a1a2b3d4e5e67890f
            doc: "Optional data payload"
          returns: result [type: "Union[Dict[str, Any], None]"] ::: a2b3c4d5e67890f1a
            doc: "Fetched data or None on error"

        # Example Generator function with impl block
        func: processStream [type: Generator] ::: a3c4d5e67890f1a2b
          doc: "Processes a stream of data"
          param: data_stream [type: ITERABLE] ::: a4d5e67890f1a2b3c
            doc: "Input data stream"
          returns: CHUNK ::: a5e67890f1a2b3c4d
            doc: "Yields processed data chunks"
          impl:
            ```python
            def process_stream(data_stream):
                for item in data_stream:
                    processed_item = item.upper() # Example processing
                    yield processed_item
            ```

      # Example Callback function
      func: on_completion [type: Callback] ::: a6f78901a2b3c4d5e
        doc: "Callback function executed on task completion"
        param: result [type: ANY] ::: a78901a2b3c4d5e6f

  # Another file demonstrating internal imports and type aliases/unions
  file: src/utils.cst ::: a8901a2b3c4d5e678
    module: utils ::: a901a2b3c4d5e6789
      doc: "Utility functions and types"
      # Example Type Alias
      type_alias: UserID [type: STRING] ::: aa0b1c2d3e4f56789
        doc: "Alias for user identifier type"

      # Example Union Type
      union: Result [type: "Union[SuccessResponse, ErrorResponse]"] ::: ab1c2d3e4f567890a
        doc: "Represents a successful or erroneous result"
        # Internal imports referencing entities within the same file
        import: SuccessResponse ::: ac2d3e4f567890a1b
          type: internal
          ref: SuccessResponse
        import: ErrorResponse ::: ad3e4f567890a1b2c
          type: internal
          ref: ErrorResponse

      # Classes referenced by the union and internal imports
      class: SuccessResponse ::: ae4f567890a1b2c3d
        doc: "Structure for a successful API response"
        attr: status [type: STRING, default: "success"] ::: af567890a1b2c3d4e
        attr: data [type: ANY] ::: a0a1b2c3d4e5f6789

      class: ErrorResponse ::: a1b2c3d4e5f67890a
        doc: "Structure for an API error response"
        attr: status [type: STRING, default: "error"] ::: a2c3d4e5f67890a1b
        attr: message [type: STRING] ::: a3d4e5f67890a1b2c
        attr: code [type: INTEGER, optional: true] ::: a4e5f67890a1b2c3d

      # Example constant and variable
      const: DEFAULT_LIMIT [type: INTEGER, default: 100] ::: a5f67890a1b2c3d4e
        doc: "Default query limit"
      var: current_count [type: INTEGER, default: 0] ::: a60718293a4b5c6d7
        doc: "Counter variable"

  # Example directory for tests with a simple file and function
  dir: tests ::: a718293a4b5c6d7e8
    file: test_utils.cst ::: a8293a4b5c6d7e8f9
      module: test_utils ::: a93a4b5c6d7e8f90a
        doc: "Unit tests for utility functions"
        import: utils ::: aa4b5c6d7e8f90a1b
          type: internal
          ref: utils
        func: test_user_id_type ::: ab5c6d7e8f90a1b2c
          doc: "Tests the UserID type alias"
          returns: BOOLEAN ::: ac6d7e8f90a1b2c3d

  # Example README file entry (can represent non-codestruct files)
  file: README.md ::: ad7e8f90a1b2c3d4e
    doc: "Project README documentation"

module: ExampleApp
  doc: "Example application demonstrating CodeStruct features"
  
  class: UserManager [type: SERVICE]
    doc: "Manages user operations"
    
    func: createUser
      doc: "Creates a new user account"
      param: userData [type: OBJECT]
        doc: "User registration data"
      returns: user [type: USER]
        doc: "Created user object"

    func: getUserById
      doc: "Retrieves user by ID"
      param: userId [type: STRING]
        doc: "Unique user identifier"
      returns: user [type: USER, optional: true]
        doc: "User object or null if not found"
  
  class: DatabaseConnection [type: UTILITY]
    doc: "Handles database connections"
    
    func: connect
      doc: "Establishes database connection"
      returns: connection [type: CONNECTION]
        doc: "Database connection object"
    
    func: disconnect
      doc: "Closes database connection"
      param: connection [type: CONNECTION]
        doc: "Connection to close" 