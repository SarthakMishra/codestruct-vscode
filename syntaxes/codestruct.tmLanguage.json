{
    "name": "CodeStruct",
    "scopeName": "source.codestruct",
    "patterns": [
        { "include": "#comments" },
        { "include": "#indentation" },
        { "include": "#keywords" },
        { "include": "#attributes" },
        { "include": "#hash_ids" },
        { "include": "#entity_names" },
        { "include": "#grouped_entities" }
    ],
    "repository": {
        "keywords": {
            "patterns": [
                {
                    "match": "\\b(source)\\b:",
                    "name": "keyword.source"
                },
                {
                    "match": "\\b([a-zA-Z_][a-zA-Z0-9_]*)\\b:",
                    "name": "keyword.codestruct"
                }
            ]
        },
        "attributes": {
            "name": "meta.attributes.codestruct",
            "begin": "\\[",
            "end": "\\]",
            "beginCaptures": { "0": { "name": "punctuation.definition.attributes.begin.codestruct" } },
            "endCaptures": { "0": { "name": "punctuation.definition.attributes.end.codestruct" } },
            "patterns": [
                {
                    "match": "([a-zA-Z_][a-zA-Z0-9_]*)(:)\\s*\\\"([^\"]*?)\\\"",
                    "captures": {
                        "1": { "name": "entity.name.attribute.codestruct" },
                        "2": { "name": "punctuation.separator.key-value.codestruct" },
                        "3": { "name": "string.quoted.attribute-value.codestruct" }
                    }
                },
                {
                    "match": "([a-zA-Z_][a-zA-Z0-9_]*)(:)\\s*([^,\\]]*)",
                    "captures": {
                        "1": { "name": "entity.name.attribute.codestruct" },
                        "2": { "name": "punctuation.separator.key-value.codestruct" },
                        "3": { "name": "string.unquoted.attribute-value.codestruct" }
                    }
                },
                {
                    "match": ",",
                    "name": "punctuation.separator.comma.codestruct"
                }
            ]
        },
        "hash_ids": {
            "patterns": [
                {
                    "match": "(:::)\\s*([A-Za-z0-9_]+)",
                    "captures": {
                        "1": { "name": "punctuation.definition.hash.codestruct" },
                        "2": { "name": "constant.other.hash.codestruct" }
                    }
                }
            ]
        },
        "comments": {
            "patterns": [
                {
                    "match": "#[^\\n]*",
                    "name": "comment.line.number-sign.codestruct"
                }
            ]
        },
        "indentation": {
            "patterns": [
                {
                    "match": "^[ \\t]+",
                    "name": "meta.whitespace.indentation.codestruct"
                }
            ]
        },
        "grouped_entities": {
            "patterns": [
                {
                    "match": "&",
                    "name": "punctuation.separator.grouped-entities.codestruct"
                }
            ]
        },
        "entity_names": {
            "patterns": [
                {
                    "match": "([a-zA-Z_/][a-zA-Z0-9_./-]*)(?=\\s*(?:\\[|$|#|&|:::|\\s*(impl:|doc:)))",
                    "captures": { "1": { "name": "entity.name.generic.codestruct" } }
                },
                {
                    "match": "([^#\\[\\n&:\\s][^#\\[\\n&]*?)(?<!\\s)(?=\\s*(?:\\[|$|#|&|:::|\\s*(impl:|doc:)))",
                    "captures": { "1": { "name": "string.unquoted.value.codestruct" } }
                }
            ]
        }
    }
}